<script>
document.addEventListener("DOMContentLoaded", () => {
  // Handle saving plain text, preserving paragraphs
  window.handleContentSave = async function(updatedContent) {
    try {
      const response = await fetch("/.netlify/functions/create-pr", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ updatedContent }),
      });

      if (!response.ok) throw new Error("Failed to edits");

      const data = await response.json();
      alert("Edit successfully made to pending changes.");
    } catch (err) {
      alert("Error editing this page: " + err.message);
    }
  };

  // Editable UI logic
  document.querySelectorAll(".editable-container").forEach(container => {
    const contentDiv = container.querySelector(".editable-content");
    const editBtn = container.querySelector(".edit-btn");
    const saveBtn = container.querySelector(".save-btn");
    const cancelBtn = container.querySelector(".cancel-btn");

    let originalContent = contentDiv.innerHTML;

    editBtn.addEventListener("click", () => {
      contentDiv.contentEditable = "true";
      contentDiv.focus();

      editBtn.style.display = "none";
      saveBtn.style.display = "inline-block";
      cancelBtn.style.display = "inline-block";

      originalContent = contentDiv.innerHTML;
    });

    // Preserve line breaks and output pure text
    function getPlainTextWithLineBreaks(element) {
      // If just text, handle simply
      if (!element.children.length) return element.innerText.trim();

      let text = '';
      for (let node of element.childNodes) {
        if (node.nodeType === Node.TEXT_NODE) {
          text += node.textContent;
        } else if (node.nodeType === Node.ELEMENT_NODE) {
          text += '\n\n' + node.innerText;
        }
      }
      // Cleanup: no triple newlines
      return text.replace(/\n{3,}/g, '\n\n').trim();
    }

    saveBtn.addEventListener("click", () => {
      contentDiv.contentEditable = "false";

      editBtn.style.display = "inline-block";
      saveBtn.style.display = "none";
      cancelBtn.style.display = "none";

      // Get cleaned pure text
      const updatedContent = getPlainTextWithLineBreaks(contentDiv);

      if (window.handleContentSave) {
        window.handleContentSave(updatedContent);
      }
    });

    cancelBtn.addEventListener("click", () => {
      contentDiv.innerHTML = originalContent;
      contentDiv.contentEditable = "false";

      editBtn.style.display = "inline-block";
      saveBtn.style.display = "none";
      cancelBtn.style.display = "none";
    });
  });
});
</script>
