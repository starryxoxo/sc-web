<small>Copyright Â© SC Web</small>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const container = document.querySelector('.container');
  let cards = Array.from(container.querySelectorAll('.card'));
  let currentIndex = 0;

  // Fisher-Yates shuffle
  function shuffleCards(array) {
    for (let i = array.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
  }

  function renderShuffledCards() {
    const shuffled = shuffleCards(cards);
    container.innerHTML = '';
    shuffled.forEach(card => {
      card.classList.remove('active', 'exit-left', 'exit-right');
      card.style.left = '100%';
      container.appendChild(card);
    });
    cards = Array.from(container.querySelectorAll('.card'));
    cards[0].classList.add('active');
    cards[0].style.left = '0';
    currentIndex = 0;
  }

  function showCard(newIndex, direction) {
    if (newIndex < 0) newIndex = cards.length - 1;
    if (newIndex >= cards.length) newIndex = 0;

    const currentCard = cards[currentIndex];
    const newCard = cards[newIndex];

    if (direction === 'next') {
      currentCard.classList.remove('active');
      currentCard.classList.add('exit-left');
    } else {
      currentCard.classList.remove('active');
      currentCard.classList.add('exit-right');
    }

    newCard.classList.remove('exit-left', 'exit-right');
    newCard.style.left = direction === 'next' ? '100%' : '-100%';
    void newCard.offsetWidth;
    newCard.classList.add('active');
    newCard.style.left = '0';

    setTimeout(() => {
      currentCard.classList.remove('exit-left', 'exit-right');
    }, 300);

    currentIndex = newIndex;
  }

  document.querySelector('.card-next').addEventListener('click', () => {
    showCard(currentIndex + 1, 'next');
  });

  document.querySelector('.card-prev').addEventListener('click', () => {
    showCard(currentIndex - 1, 'prev');
  });

  renderShuffledCards();
});
</script>
